#!/usr/bin/env node

var memdiff = require('../lib'),
    argv    = require('optimist').argv;

require("colors");


var duration = argv.duration || 5,
    times    = argv.times || 999,
    interval = argv.interval || 2.5,
    pattern  = argv.pattern || argv.p;

argv.help || argv.verbose && help();
argv._ && argv._.length ? run() : help();

function help(){
  process.stdout.write('\u001B[2J\u001B[0;0f');
  console.log('\n     Usage \n');
  console.log('          memdiff [module] [options]'.grey);
  console.log('\n     Options\n');
  console.log('          --pattern      Filter tests by given pattern: %s'.grey, pattern || '');
  console.log('          --duration     Duration per test: %d seconds'.grey, duration);
  console.log('          --times        Each test will be executed %d times on each loop.'.grey, times);
  console.log('          --interval     Interval between loops is set to %d\n'.grey, interval);
}

function run(){

  var tests    = memdiff.loadModule(argv._[0]),
      keys     = Object.keys(tests);

  console.log('');

  (function next(i){

    if(i >= keys.length){
      console.log('');
      return;
    }

    if(pattern && !(new RegExp(pattern)).test(keys[i])){
      return next(i+1);
    }

    var options = {
      fn       : tests[keys[i]],
      duration : duration,
      times    : times,
      interval : interval
    };

    memdiff(options, function(result){

      console.log('    ',
                  i + 1 + '.',
                  ( keys[i] + ':' ).bold.grey,
                  result.size[ parseInt(result.size) < 50 ? 'white' : 'red' ]);
      setTimeout(next, 200, i+1);
    });

  }(0));

}
